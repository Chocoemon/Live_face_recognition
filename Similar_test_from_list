# 사진내에서 얼굴을 검출해내는 CODE + 영상 계속 따오기 .
# detection_mode = 2
import cv2
import asyncio
import io
import glob
import os
import sys
import time
import uuid
import requests
from urllib.parse import urlparse
from io import BytesIO
from PIL import Image, ImageDraw
from azure.cognitiveservices.vision.face import FaceClient
from msrest.authentication import CognitiveServicesCredentials
from azure.cognitiveservices.vision.face.models import TrainingStatusType, Person, SnapshotObjectType, OperationStatusType

#1. Make string related with KEY, ENDPOINT
# 이건 건들지 마시오!!!
KEY = os.environ['FACE_SUBSCRIPTION_KEY']
ENDPOINT = os.environ['FACE_ENDPOINT']
face_client = FaceClient(ENDPOINT, CognitiveServicesCredentials(KEY))


#list에 사진 추가하는 코드
single_face_image_path = "C:/Users/CNH/PycharmProjects/untitled1/images/pp.jpg"
single_image_name = os.path.basename(single_face_image_path)
image_name_1 = open(single_face_image_path, 'rb')
detected_faces=face_client.face.detect_with_stream(image=image_name_1, return_face_id=True, recognition_model='recognition_03')
print('Detected face ID from', single_image_name, ':')
for face in detected_faces:
    print (face.face_id)
    similar_faces = face_client.face.find_similar(face_id=face.face_id, face_list_id = 'test_list')
    for i in similar_faces:
        print('Similar faces found')
        for face in similar_faces:
            # The similar face IDs of the single face image and the group image do not need to match,
            # they are only used for identification purposes in each image.
            # The similar faces are matched using the Cognitive Services algorithm in find_similar().
            print(similar_faces[0].confidence)
            img = cv2.imread(single_face_image_path)
            face_info = next(x for x in similar_faces)
            cv2.imshow("linear", img)

